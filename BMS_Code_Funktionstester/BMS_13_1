//globale Variablen 
float volt_v[4] = {0,0,0,0}; 
float volt_n[4] = {0,0,0,0}; 
int failure = 0;

//Programm nach Volatge
void undervoltage_test_v()
{
  if(b_state_undervoltage == 1){
    for (int k=1; k<=4; k++){                
      volt_v[k-1] = getCellVoltage(k);      
       //Serial.println(volt_n[k-1]);
    }
  }
}

//Programm vor Voltage 
void undervoltage_test_n()
{
  if(b_state_undervoltage == 1){
    for (int k=1; k<=4; k++){               
        volt_n[k-1] = getCellVoltage(k);  
        //Serial.println(volt_n[k-1]);
    }
    for (int i=1; i<=4; i++){
        if(volt_v[i-1] > volt_n[i-1] && volt_v[i-1] <= 2.5){
          Serial.println();
          Serial.println("ERROR Voltage got decreased");
          Serial.print("Cell no. ");
          Serial.println(i);
          Serial.print("before: ");
          Serial.print(volt_v[i-1]);
          Serial.println(" V");
          Serial.print("after: ");
          Serial.print(volt_n[i-1]);
          Serial.println(" V");
          Serial.print("delta: ");
          Serial.print(abs(volt_n[i-1] - volt_v[i-1]));
          Serial.println(" V");
          Serial.println();
          failure++;
        }
    }
  }
  if(millis() >= 900000){                                                         
       Serial.print("15.min test cycle ended, ERRORS: ");
       Serial.println(failure);
       Serial.println();
       delay(10000000);
       
    }
}
